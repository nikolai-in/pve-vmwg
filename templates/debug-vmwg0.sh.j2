#!/bin/bash
# VM Subnet VPN Routing Diagnostics Script
# Generated by Ansible - DO NOT EDIT MANUALLY
# Because we all know networking never works the first time

echo "=== WireGuard Status ==="
wg show

echo -e "\n=== Interface Status ==="
ip addr show vmwg0 2>/dev/null || echo "❌ vmwg0 not found"
ip addr show wg0 2>/dev/null || echo "❌ wg0 not found"

echo -e "\n=== Routing Tables ==="
echo "Main table (host traffic):"
ip route show table main | head -5

echo -e "\nTable {{ routing_table_id }} (VM traffic):"
ip route show table {{ routing_table_id }}

echo -e "\n=== Policy Routing Rules ==="
echo "Looking for rules affecting {{ vm_subnet }}:"
ip rule show | grep -E "({{ routing_table_id }}|{{ vm_subnet | replace('.', '\.') }})"

echo -e "\n=== NAT Rules ==="
echo "POSTROUTING rules for {{ vm_subnet }}:"
iptables -t nat -L POSTROUTING -n | grep "{{ vm_subnet | replace('.', '\.') }}"

echo -e "\n=== Service Status ==="
systemctl is-active wg-quick@wg0 && echo "✅ WireGuard: Active" || echo "❌ WireGuard: Inactive"
systemctl is-active dnsmasq@vmwgnat && echo "✅ dnsmasq: Active" || echo "❌ dnsmasq: Inactive"

echo -e "\n=== Test Commands ==="
echo "To test from a VM:"
echo "  curl -s ifconfig.me  # Should show VPN exit IP"
echo "  traceroute 8.8.8.8   # Should go through {{ vm_gateway }} then VPN"
echo ""
echo "To test from host:"
echo "  curl -s ifconfig.me  # Should show your real IP"

echo -e "\n=== DHCP Leases ==="
if [ -f /var/lib/misc/dnsmasq.vmwgnat.leases ]; then
    echo "Active DHCP leases:"
    cat /var/lib/misc/dnsmasq.vmwgnat.leases
else
    echo "No DHCP leases file found (VMs not connected yet?)"
fi

echo -e "\n=== DNS Resolution Test ==="
echo "Testing DNS resolution through VM gateway:"
nslookup google.com {{ vm_gateway }} 2>/dev/null && echo "✅ DNS working" || echo "❌ DNS issues"
